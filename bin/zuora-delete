#!/usr/bin/env ruby
#
# Copyright 2010 Ning
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$:.unshift(File::join(File::dirname(File::dirname(__FILE__)), 'lib'))

require 'rubygems'
require 'optparse'
require 'json/pure'
require 'zuora4r'

username = nil
password = nil
environment = 'prod'
type = nil
ids = nil
verbose = false


opts = OptionParser.new do |opts|
  opts.banner = 'Usage: zuora-delete -u <username> -p <password> -e [prod|sandbox] -t <type> -i <id_1,...>'
  opts.on('-u', '--user USERNAME', 'username') { |u| username = u }
  opts.on('-p', '--pass PASSWORD', 'password') { |p| password = p }
  opts.on('-e', '--env ENVIRONMENT', '[prod|sandbox] (default: prod)') { |e| environment = e }
  opts.on('-t', '--type TYPE', 'type (Account, Subscription, Payment, etc)') { |e| type = e }
  opts.on('-i', '--id IDs', 'id(s) to be removed') { |e| ids = e.split(',').map {|i| i.strip} }
  opts.on('-v', '--verbose', 'log harder') { verbose = true }
end

if ARGV.empty?
  puts opts
  exit
end

opts.parse!(ARGV)

unless username and password and type and ids
  puts opts
  exit 1
end

url = case environment.downcase
  when 'sandbox'
    Zuora4r::SANDBOX_URL
  else
    Zuora4r::PROD_URL
end

zuora_client = Zuora4r.new(username, password, url, verbose)

result = zuora_client.delete(type, ids)

puts JSON.pretty_generate(result) if result
